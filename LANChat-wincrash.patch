Binary files LANChat-1.0.2.old/LANChat and LANChat-1.0.2/LANChat differ
diff -uNr LANChat-1.0.2.old/lc_main.c LANChat-1.0.2/lc_main.c
--- LANChat-1.0.2.old/lc_main.c	Thu Mar 16 00:31:55 2000
+++ LANChat-1.0.2/lc_main.c	Tue Dec  4 04:48:01 2001
@@ -40,6 +40,19 @@
 
 FILE* f;
 
+// added by emvi
+// add 'LC40' at the end of data
+// LANChat for ms windows will crush if there isnt here
+void presnd()
+{
+    int pos = strlen(hsnd.data);
+    hsnd.data[pos+1] = 'L';
+    hsnd.data[pos+2] = 'C';
+    hsnd.data[pos+3] = '4';
+    hsnd.data[pos+4] = '0';
+}
+// emvi
+
 /********************************* main *****************************************/
 
 int main( int argc, char **argv )
@@ -159,6 +172,7 @@
     }
 
     if ( cp2 == 0 ) { /* we are in cild process */
+	presnd();
         while ( 1 ) {
             hsnd.dest = hsnd.sender;
             hsnd.type = LC_LINUX_REQUEST;
@@ -230,7 +244,7 @@
     strcpy( topic, "<>" );
 
     strcpy( hsnd.nick, logname ); /* logname is safe */
-    pop_mode = 0; /* allow popup msgs */
+    pop_mode = 1; /* dont allow popup msgs */
 
     wattrset( defwin, COLOR_PAIR( 4 ) );
     wprintw( defwin, "Welcome to " );
@@ -304,6 +318,7 @@
                         hsnd.type = LC_NORMAL;
                         strcat( hsnd.data, "\x0d\x0a\0" );
                         crypt( hsnd.data, hsnd.sender, hsnd.dest );
+			presnd();
                         snd();
                     }
                     break;
@@ -314,6 +329,7 @@
                     if ( !prepare_message() ) {
                         hsnd.type = LC_POPUP;
                         crypt( hsnd.data, hsnd.sender, hsnd.dest );
+			presnd();
                         snd();
                     }
                     break;
@@ -331,6 +347,7 @@
                     if ( auser( hrcv.data ) != -1 ) {
                         hsnd.type = LC_REQ_STATUS_EX;
                         hsnd.dest = auser( hrcv.data );
+			presnd();
                         snd();
                     }
                     else {
@@ -358,6 +375,7 @@
                     hsnd.dest = LC_BROADCAST;
                     if ( users[ hsnd.sender ].away == 0 ) hsnd.type = LC_ALIVE;
                     else hsnd.type = LC_AWAY_ALIVE;
+		    presnd();
                     snd();
                     for ( i = 0; i < 255; i++ ) 
                         if ( strlen( users[ i ].nick ) > 0 && i != hsnd.sender ) {
@@ -413,6 +431,7 @@
                         }else
 			    hsnd.type = LC_CANTPOP;
                     	hsnd.dest = hrcv.sender;
+			presnd();
                     	snd();
 //                    }
                     break;
@@ -436,6 +455,7 @@
 		    hsnd.data[4092]='\0';
                     strcat( hsnd.data, "\x0d\x0a\0" );
                     crypt( hsnd.data, hsnd.sender, hsnd.dest );
+		    presnd();
                     snd();
                     break;
                 case LC_STATUS_EX:
@@ -462,16 +482,19 @@
 			hsnd.type = LC_ALIVE;
                     else
 			hsnd.type = LC_AWAY_ALIVE;
+		    presnd();
                     snd();
                     hsnd.type = LC_TOPIC;
                     strncpy( hsnd.data, topic, 4092 ); hsnd.data[4092]='\0';
                     strcat( hsnd.data, "\x0d\x0a\0" );
                     crypt( hsnd.data, hsnd.sender, hsnd.dest );
+		    presnd();
                     snd();
                     hsnd.type = LC_TOPIC_TIME;
                     strncpy( hsnd.data, topictime, 4092 ); hsnd.data[4092]='\0';
                     strcat( hsnd.data, "\x0d\x0a\0" );
                     crypt( hsnd.data, hsnd.sender, hsnd.dest );
+		    presnd();
                     snd();
                     break;
                 case LC_LEAVE:
@@ -497,6 +520,7 @@
                         strncpy( hsnd.data, away, 4092 ); hsnd.data[4092]='\0';
                         strcat( hsnd.data, "\x0d\x0a\0" );
                         crypt( hsnd.data, hsnd.sender, hsnd.dest );
+			presnd();
                         snd();
                     }
                     break;
@@ -506,6 +530,7 @@
 			hsnd.type = LC_ALIVE;
                     else
 			hsnd.type = LC_AWAY_ALIVE;
+		    presnd();
                     snd();
                     break;
                 case LC_START_AWAY:
@@ -559,6 +584,7 @@
 	hsnd.data[4092]='\0';
         strcat( hsnd.data, "\x0d\x0a\0" );
         crypt( hsnd.data, hsnd.sender, hsnd.dest );
+	presnd();
         snd();
 
         while ( !finish ) {
@@ -613,6 +639,7 @@
                 hsnd.data[ strlen( hsnd.data ) - 7 ] = '\0';
                 strcat( hsnd.data, "\x0d\x0a\0" );
                 crypt( hsnd.data, hsnd.sender, hsnd.dest );
+		presnd();
                 snd();
                 hsnd.type = LC_TOPIC_TIME;
                 strcpy( hsnd.data, atime( 0 ) );
@@ -698,6 +725,7 @@
 		if(away_mode==1){ /* termination of away mode */
                     hsnd.type = LC_END_AWAY;
             	    hsnd.dest = LC_BROADCAST;
+		    presnd();
 		    snd();
 		    away_mode = 0;
 		}								
@@ -713,6 +741,7 @@
                 hsnd.dest = hsnd.sender;
             }
             crypt( hsnd.data, hsnd.sender, hsnd.dest );
+	    presnd();
             snd();
             wdeleteln( inputwin );
             wrefresh( inputwin );
